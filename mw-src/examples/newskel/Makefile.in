#-------------------------------------------------------------------------
# This file was automatically generated by Automake, and manually modified 
# to make it simpler and cleaner. There are three sections in the file:
# 1) Macros
# 2) Recursive Rules and Suffixes (implicit rules)
# 3) Explicit Rules
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#   Section 1) Macros
#-------------------------------------------------------------------------
top_srcdir = @top_srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
libdir = @libdir@
includedir = @includedir@

# Compiler and tools
CXX = @CXX@
AR = @AR@
RANLIB = @RANLIB@
INSTALL = @INSTALL@
PACKAGE = @PACKAGE@
VERSION = @VERSION@
USE_CHIRP = @USE_CHIRP@
USE_MWFILE = @USE_MWFILE@

# Condor and MW installation path
CONDOR_DIR = @CONDOR_DIR@
MW_DIR = @MW_DIR@
MW_LIBDIR = $(MW_DIR)/lib
MW_LIBDIR_DEBUG = $(MW_DIR)/debug_lib
MW_BASICLIB = -lMW -lMWRMComm -lMWutil -lNWS  $(SOCKET_LIB)
SOCKET_LIB = @SOCKET_LIB@

# PVM 
PVM_ROOT = @PVM_ROOT@
PVM_ARCH = @PVM_ARCH@
PVM_LIB = -L$(PVM_ROOT)/lib/$(PVM_ARCH) -lpvm3

# Flags
DEFS = @DEFS@ -I.
LIBS = @LIBS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
CXXFLAGS = @CXXFLAGS@ -Wall

# Subdirectories
SUBDIRS = 

# MW-Independent will be used to debug: "setenv ENABLE_MWINDEPENDENT yes" to turn it on; 
# Type "master_MYAPP_indp < in_master.indp" to see if the example works without submit to condor.
ENABLE_MWINDEPENDENT = @ENABLE_MWINDEPENDENT@

ifeq ($(ENABLE_MWINDEPENDENT), yes)
  INDEPENDENT_PROGS = master_MYAPP_indp
  INDEPENDENT_INCLS = $(MW_DIR)/src/RMComm/MW-Independent
  master_MYAPP_indp_LDADD   = -L$(MW_LIBDIR) -lMW_indp -lMWRMComm_indp -lMWRC_indp -lMWutil_indp -lNWS_indp  $(SOCKET_LIB)
  master_MYAPP_indp_OBJECTS =  Driver_MYAPP-Ind.o Worker_MYAPP-Ind.o Task_MYAPP-Ind.o MasterMain_MYAPP-Ind.o
endif

# Check programs to be built, and dependent source files.
ifdef DEBUG_BUILD
  # To work with Insure, need to "setenv DEBUG_BUILD='insure'" and write/copy a good .psrc file
  DEBUG_CHECKER = $(DEBUG_BUILD)
  MW_LIBDIR = $(MW_LIBDIR_DEBUG)
  # MW-File doesn't work with Insure, so will not compile *_file if DEBUG_BUILD
  PROGRAMS = master_MYAPP_socket worker_MYAPP_socket $(INDEPENDENT_PROGS)
  INCLUDES = -I$(MWDIR)/src -I$(MW_DIR)/src/MWControlTasks -I$(MW_DIR)/src/RMComm -I$(MW_DIR)/src/RMComm/MW-CondorPVM \
		-I$(INDEPENDENT_INCLS) $(MEASURE_DEFN)
else
  PROGRAMS = \
		master_MYAPP_socket worker_MYAPP_socket $(INDEPENDENT_PROGS)
  INCLUDES = -I$(MW_DIR)/src -I$(MW_DIR)/src/MWControlTasks -I$(MW_DIR)/src/RMComm -I$(MW_DIR)/src/RMComm/MW-File \
		-I$(MW_DIR)/src/RMComm/MW-CondorPVM -I$(INDEPENDENT_INCLS) $(MEASURE_DEFN)
endif

ifeq ($(CONDOR_DIR), no)
  PROGRAMS = $(INDEPENDENT_PROGS)
else

ifneq ($(PVM_ROOT), no)
  PROGRAMS += master_MYAPP_condorpvm worker_MYAPP_condorpvm
endif

# if USE_MWFILE != no, also build mwfile
ifneq ($(USE_MWFILE), no)
PROGRAMS += master_MYAPP_file worker_MYAPP_file
endif

endif

ifdef USE_CHIRP
CONDOR_COMPILE =
else
CONDOR_COMPILE = $(CONDOR_DIR)/bin/condor_compile
endif

# Compile commands 
CXXCOMPILE = $(DEBUG_CHECKER) $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(DEBUG_CHECKER) $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@

# MW-File Dependencies 
master_MYAPP_file_SOURCES = Driver_MYAPP.C Task_MYAPP.C MasterMain_MYAPP.C
master_MYAPP_file_LDADD   = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWfilemaster $(CONDOR_DIR)/lib/libcondorapi.a -ldl
master_MYAPP_file_OBJECTS =  Driver_MYAPP.o Task_MYAPP.o MasterMain_MYAPP.o
master_MYAPP_file_DEPENDENCIES =  $(CONDOR_DIR)/lib/libcondorapi.a
master_MYAPP_file_LDFLAGS = 

worker_MYAPP_file_SOURCES = Worker_MYAPP.C Task_MYAPP.C WorkerMain_MYAPP.C
worker_MYAPP_file_LDADD = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWfileworker
worker_MYAPP_file_OBJECTS =  Worker_MYAPP.o Task_MYAPP.o WorkerMain_MYAPP.o
worker_MYAPP_file_DEPENDENCIES =
worker_MYAPP_file_LDFLAGS =

# MW-CondorPvm Dependencies 
master_MYAPP_condorpvm_SOURCES = Driver_MYAPP.C Task_MYAPP.C MasterMain_MYAPP.C
master_MYAPP_condorpvm_LDADD = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWcondorpvmmaster $(PVM_LIB)
master_MYAPP_condorpvm_OBJECTS =  Driver_MYAPP.o Task_MYAPP.o MasterMain_MYAPP.o
master_MYAPP_condorpvm_DEPENDENCIES =
master_MYAPP_condorpvm_LDFLAGS =

worker_MYAPP_condorpvm_SOURCES = Worker_MYAPP.C Task_MYAPP.C WorkerMain_MYAPP.C
worker_MYAPP_condorpvm_LDADD = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWcondorpvmworker $(PVM_LIB)
worker_MYAPP_condorpvm_OBJECTS =  Worker_MYAPP.o Task_MYAPP.o WorkerMain_MYAPP.o
worker_MYAPP_condorpvm_DEPENDENCIES =
worker_MYAPP_condorpvm_LDFLAGS =

# MW-Socket Dependencies 
master_MYAPP_socket_SOURCES = Driver_MYAPP.C Task_MYAPP.C MasterMain_MYAPP.C
master_MYAPP_socket_LDADD = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWsocketmaster
master_MYAPP_socket_OBJECTS =  Driver_MYAPP.o Task_MYAPP.o MasterMain_MYAPP.o
master_MYAPP_socket_DEPENDENCIES =
master_MYAPP_socket_LDFLAGS =

worker_MYAPP_socket_SOURCES = Worker_MYAPP.C Task_MYAPP.C WorkerMain_MYAPP.C
worker_MYAPP_socket_LDADD = -L$(MW_LIBDIR) $(MW_BASICLIB) -lMWsocketworker
worker_MYAPP_socket_OBJECTS =  Worker_MYAPP.o Task_MYAPP.o WorkerMain_MYAPP.o
worker_MYAPP_socket_DEPENDENCIES =
worker_MYAPP_socket_LDFLAGS =

#-------------------------------------------------------------------------
#   Section 2) Explicit and Implicit Rules
#-------------------------------------------------------------------------
all: $(PROGRAMS)
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

# Rules for *-Ind.o and MYAPP_indp
Driver_MYAPP-Ind.o: Driver_MYAPP.C
	$(CXXCOMPILE) -DINDEPENDENT -o Driver_MYAPP-Ind.o -c Driver_MYAPP.C

Task_MYAPP-Ind.o: Task_MYAPP.C
	$(CXXCOMPILE) -DINDEPENDENT -o Task_MYAPP-Ind.o -c Task_MYAPP.C

Worker_MYAPP-Ind.o: Worker_MYAPP.C
	$(CXXCOMPILE) -DINDEPENDENT -o Worker_MYAPP-Ind.o -c Worker_MYAPP.C

MasterMain_MYAPP-Ind.o: MasterMain_MYAPP.C
	$(CXXCOMPILE) -DINDEPENDENT -o MasterMain_MYAPP-Ind.o -c MasterMain_MYAPP.C

master_MYAPP_indp: $(master_MYAPP_indp_OBJECTS) $(master_MYAPP_indp_DEPENDENCIES)
	@rm -f master_MYAPP_indp
	$(CXXLINK) $(master_MYAPP_indp_LDFLAGS) $(master_MYAPP_indp_OBJECTS) $(master_MYAPP_indp_LDADD) $(LIBS)

# Rules for _file
master_MYAPP_file: $(master_MYAPP_file_OBJECTS) $(master_MYAPP_file_DEPENDENCIES)
	@rm -f master_MYAPP_file
	$(CXXLINK) $(master_MYAPP_file_LDFLAGS) $(master_MYAPP_file_OBJECTS) $(master_MYAPP_file_LDADD) $(LIBS)

worker_MYAPP_file: $(worker_MYAPP_file_OBJECTS) 
	$(CONDOR_COMPILE) $(CXXLINK) $(worker_MYAPP_file_LDFLAGS) $(worker_MYAPP_file_OBJECTS) \
	$(worker_MYAPP_file_LDADD) $(LIBS) $(INCLUDES)

# Rules for _condorpvm
master_MYAPP_condorpvm: $(master_MYAPP_condorpvm_OBJECTS) $(master_MYAPP_condorpvm_DEPENDENCIES)
	@rm -f master_MYAPP_condorpvm
	$(CXXLINK) $(master_MYAPP_condorpvm_LDFLAGS) $(master_MYAPP_condorpvm_OBJECTS) $(master_MYAPP_condorpvm_LDADD) $(LIBS)

worker_MYAPP_condorpvm: $(worker_MYAPP_condorpvm_OBJECTS) $(worker_MYAPP_condorpvm_DEPENDENCIES)
	@rm -f worker_MYAPP_condorpvm
	$(CXXLINK) $(worker_MYAPP_condorpvm_LDFLAGS) $(worker_MYAPP_condorpvm_OBJECTS) $(worker_MYAPP_condorpvm_LDADD) $(LIBS)

# Rules for _socket
master_MYAPP_socket: $(master_MYAPP_socket_OBJECTS) $(master_MYAPP_socket_DEPENDENCIES)
	@rm -f master_MYAPP_socket
	$(CXXLINK) $(master_MYAPP_socket_LDFLAGS) $(master_MYAPP_socket_OBJECTS) $(master_MYAPP_socket_LDADD) $(LIBS)

worker_MYAPP_socket: $(worker_MYAPP_socket_OBJECTS) $(worker_MYAPP_socket_DEPENDENCIES)
	@rm -f worker_MYAPP_socket
	$(CXXLINK) $(worker_MYAPP_socket_LDFLAGS) $(worker_MYAPP_socket_OBJECTS) $(worker_MYAPP_socket_LDADD) $(LIBS)

# Default rules 
.SUFFIXES: .C .o

.C.o:
	$(CXXCOMPILE) -c $<

#-------------------------------------------------------------------------
#   Section 3) Recursive Rules: Common
#-------------------------------------------------------------------------
check:

clean:
	-rm -f $(PROGRAMS) *.o *.a core
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

distclean:
	-rm -f Makefile *.tar *.gz
	-rm -rf .deps
	-rm -f configure config.cache config.status config.log stamp-h stamp-h[0-9]*
	-rm -f $(PROGRAMS) *.o *.a core *~
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

.PHONY: all check clean distclean
