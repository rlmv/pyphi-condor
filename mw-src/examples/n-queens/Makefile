#-------------------------------------------------------------------------
# This file was automatically generated by Automake, and manually modified 
# to make it simpler and cleaner. There are three sections in the file:
# 1) Macros
# 2) Recursive Rules and Suffixes (implicit rules)
# 3) Explicit Rules
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#   Section 1) Macros
#-------------------------------------------------------------------------
top_srcdir = ../..
prefix = /Users/robertmarchman/IIT/chtc/mw
exec_prefix = ${prefix}
libdir = ${exec_prefix}/lib
includedir = ${prefix}/include

CONDOR_DIR = no
CXX = /usr/bin/g++
MEASURE_DEFN = 
MISC_DEFN = 
MISC_LIB = -lNWS
MW_LIBDIR = /Users/robertmarchman/IIT/chtc/mw-source/lib
MW_LIBDIR_DEBUG = /Users/robertmarchman/IIT/chtc/mw-source/debug_lib
PVM_ROOT = no
PVM_ARCH = 
RANLIB = ranlib
INSTALL = /usr/local/bin/ginstall -c
SOCKET_LIB = 
PACKAGE = mw
VERSION = 0.3.0
USE_CHIRP = 
USE_MWFILE = no

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
AR = ar

DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DTIME_WITH_SYS_TIME=1 -DHAVE_VPRINTF=1 -DHAVE_GETCWD=1 -DHAVE_GETHOSTNAME=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_MKDIR=1 -DHAVE_STRSTR=1 -DHAVE_DYNAMIC_CAST= -DCONDOR_DIR=\"no\"  -I.
LIBS = 
CPPFLAGS = 
LDFLAGS = 
CXXFLAGS = -g -O2 -Wall

# Subdirectories
SUBDIRS =

# MW-Independent will be used to debug: "setenv ENABLE_MWINDEPENDENT yes" to turn it on; 
#  type "masterYourApp_indp < in_master.indp" to see if the example works without submit to condor
ENABLE_MWINDEPENDENT = yes
ifeq ($(ENABLE_MWINDEPENDENT), yes)
INDEPENDENT_PROGS = masternQueens_indp
INDEPENDENT_INCLS = ../../src/RMComm/MW-Independent
masternQueens_indp_LDADD = -L$(MW_LIBDIR) -lMW_indp -lMWRMComm_indp -lMWRC_indp -lMWutil_indp  $(SOCKET_LIB) $(MISC_LIB)
masternQueens_indp_OBJECTS =  Driver-nQueens-Ind.o Worker-nQueens-Ind.o Task-nQueens-Ind.o MasterMain-nQueens-Ind.o
endif

# Check programs to be built, and dependent source files
ifdef DEBUG_BUILD
  # To work with Insure, need to "setenv DEBUG_BUILD='insure'" and write/copy a good .psrc file
DEBUG_CHECKER = $(DEBUG_BUILD)
MW_LIBDIR = $(MW_LIBDIR_DEBUG)
  # MW-File doesn't work with Insure, so will not compile *_file if DEBUG_BUILD
PROGRAMS = masternQueens_socket workernQueens_socket $(INDEPENDENT_PROGS)
INCLUDES = -I../../src -I../../src/MWControlTasks -I../../src/RMComm -I../../src/RMComm/MW-CondorPVM -I$(INDEPENDENT_INCLS) $(MEASURE_DEFN)
else
PROGRAMS = masternQueens_socket workernQueens_socket $(INDEPENDENT_PROGS)
INCLUDES = -I../../src -I../../src/MWControlTasks -I../../src/RMComm -I../../src/RMComm/MW-File -I../../src/RMComm/MW-CondorPVM -I$(INDEPENDENT_INCLS) $(MEASURE_DEFN)
endif

ifeq ($(CONDOR_DIR), no)
PROGRAMS = $(INDEPENDENT_PROGS)
else

ifneq ($(PVM_ROOT), no)
PROGRAMS += masternQueens_condorpvm workernQueens_condorpvm
endif

# if USE_MWFILE != no, also build mwfile
ifneq ($(USE_MWFILE), no)
PROGRAMS += masternQueens_file workernQueens_file
endif

endif

ifdef USE_CHIRP
CONDOR_COMPILE =
else
CONDOR_COMPILE = $(CONDOR_DIR)/bin/condor_compile
endif

CXXCOMPILE = $(DEBUG_CHECKER) $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(DEBUG_CHECKER) $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@

masternQueens_file_SOURCES = Driver-nQueens.C Task-nQueens.C MasterMain-nQueens.C
masternQueens_file_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWfilemaster -lMWutil $(CONDOR_DIR)/lib/libcondorapi.a  $(SOCKET_LIB) $(MISC_LIB) -ldl
masternQueens_file_OBJECTS =  Driver-nQueens.o Task-nQueens.o MasterMain-nQueens.o
masternQueens_file_DEPENDENCIES =  $(CONDOR_DIR)/lib/libcondorapi.a 
masternQueens_file_LDFLAGS = 
workernQueens_file_SOURCES = Worker-nQueens.C Task-nQueens.C WorkerMain-nQueens.C
workernQueens_file_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWfileworker -lMWutil -lMW -lMWRMComm  $(SOCKET_LIB) $(MISC_LIB)
workernQueens_file_OBJECTS =  Worker-nQueens.o Task-nQueens.o WorkerMain-nQueens.o
workernQueens_file_DEPENDENCIES =
workernQueens_file_LDFLAGS =

masternQueens_condorpvm_SOURCES = Driver-nQueens.C Task-nQueens.C MasterMain-nQueens.C
masternQueens_condorpvm_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWcondorpvmmaster -lMWutil -L$(PVM_ROOT)/lib/$(PVM_ARCH) -lpvm3  $(SOCKET_LIB) $(MISC_LIB)
masternQueens_condorpvm_OBJECTS =  Driver-nQueens.o Task-nQueens.o MasterMain-nQueens.o
masternQueens_condorpvm_DEPENDENCIES =
masternQueens_condorpvm_LDFLAGS =
workernQueens_condorpvm_SOURCES = Worker-nQueens.C Task-nQueens.C WorkerMain-nQueens.C
workernQueens_condorpvm_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWcondorpvmworker -lMWutil -lNWS -lMW -lMWRMComm -L$(PVM_ROOT)/lib/$(PVM_ARCH) -lpvm3  -lMW -lMWRMComm  $(SOCKET_LIB) $(MISC_LIB)
workernQueens_condorpvm_OBJECTS =  Worker-nQueens.o Task-nQueens.o WorkerMain-nQueens.o
workernQueens_condorpvm_DEPENDENCIES =
workernQueens_condorpvm_LDFLAGS =

masternQueens_socket_SOURCES = Driver-nQueens.C Task-nQueens.C MasterMain-nQueens.C
masternQueens_socket_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWsocketmaster -lMWutil  $(SOCKET_LIB) $(MISC_LIB)
masternQueens_socket_OBJECTS =  Driver-nQueens.o Task-nQueens.o MasterMain-nQueens.o
masternQueens_socket_DEPENDENCIES =
masternQueens_socket_LDFLAGS =
workernQueens_socket_SOURCES = Worker-nQueens.C Task-nQueens.C WorkerMain-nQueens.C
workernQueens_socket_LDADD = -L$(MW_LIBDIR) -lMW -lMWRMComm -lMWsocketworker -lNWS -lMWutil -lMW -lMWRMComm  $(SOCKET_LIB) $(MISC_LIB)
workernQueens_socket_OBJECTS =  Worker-nQueens.o Task-nQueens.o WorkerMain-nQueens.o
workernQueens_socket_DEPENDENCIES =
workernQueens_socket_LDFLAGS =

#-------------------------------------------------------------------------
#   Section 2) Explicit and Implicit Rules
#-------------------------------------------------------------------------

# make the indp, condorpvm, socket and file versions (file should work now)
all: $(PROGRAMS)

Driver-nQueens-Ind.o:Driver-nQueens.C
	$(CXXCOMPILE) -DINDEPENDENT -o Driver-nQueens-Ind.o -c Driver-nQueens.C
Task-nQueens-Ind.o:Task-nQueens.C
	$(CXXCOMPILE) -DINDEPENDENT -o Task-nQueens-Ind.o -c Task-nQueens.C
Worker-nQueens-Ind.o:Worker-nQueens.C
	$(CXXCOMPILE) -DINDEPENDENT -o Worker-nQueens-Ind.o -c Worker-nQueens.C
MasterMain-nQueens-Ind.o:MasterMain-nQueens.C
	$(CXXCOMPILE) -DINDEPENDENT -o MasterMain-nQueens-Ind.o -c MasterMain-nQueens.C

masternQueens_indp: $(masternQueens_indp_OBJECTS) $(masternQueens_indp_DEPENDENCIES)
	@rm -f masternQueens_indp
	$(CXXLINK) $(masternQueens_indp_LDFLAGS) $(masternQueens_indp_OBJECTS) $(masternQueens_indp_LDADD) $(LIBS)

masternQueens_file: $(masternQueens_file_OBJECTS) $(masternQueens_file_DEPENDENCIES)
	@rm -f masternQueens_file
	$(CXXLINK) $(masternQueens_file_LDFLAGS) $(masternQueens_file_OBJECTS) $(masternQueens_file_LDADD) $(LIBS)

workernQueens_file: $(workernQueens_file_OBJECTS) 
	$(CONDOR_COMPILE) $(CXXLINK) $(workernQueens_file_LDFLAGS) $(workernQueens_file_OBJECTS) $(workernQueens_file_LDADD) $(LIBS) $(INCLUDES)

masternQueens_condorpvm: $(masternQueens_condorpvm_OBJECTS) $(masternQueens_condorpvm_DEPENDENCIES)
	@rm -f masternQueens_condorpvm
	$(CXXLINK) $(masternQueens_condorpvm_LDFLAGS) $(masternQueens_condorpvm_OBJECTS) $(masternQueens_condorpvm_LDADD) $(LIBS)

workernQueens_condorpvm: $(workernQueens_condorpvm_OBJECTS) $(workernQueens_condorpvm_DEPENDENCIES)
	@rm -f workernQueens_condorpvm
	$(CXXLINK) $(workernQueens_condorpvm_LDFLAGS) $(workernQueens_condorpvm_OBJECTS) $(workernQueens_condorpvm_LDADD) $(LIBS)

masternQueens_socket: $(masternQueens_socket_OBJECTS) $(masternQueens_socket_DEPENDENCIES)
	@rm -f masternQueens_socket
	$(CXXLINK) $(masternQueens_socket_LDFLAGS) $(masternQueens_socket_OBJECTS) $(masternQueens_socket_LDADD) $(LIBS)

workernQueens_socket: $(workernQueens_socket_OBJECTS) $(workernQueens_socket_DEPENDENCIES)
	@rm -f workernQueens_socket
	$(CXXLINK) $(workernQueens_socket_LDFLAGS) $(workernQueens_socket_OBJECTS) $(workernQueens_socket_LDADD) $(LIBS)

.SUFFIXES: .C .o

.C.o:
	$(CXXCOMPILE) -c $<

#-------------------------------------------------------------------------
#   Section 3) Recursive Rules: Common
#-------------------------------------------------------------------------
install:

check: $(PROGRAMS)
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

clean:
	-rm -f $(PROGRAMS) *.o *.a core
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

distclean:
	-rm -f Makefile *.tar *.gz
	-rm -rf .deps
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-rm -f $(PROGRAMS) *.o *.a core
	[ "__$(SUBDIRS)" = "__" ] || for subdir in `echo "$(SUBDIRS)"`; do (cd $$subdir && $(MAKE) $@) ; done

.PHONY: all check clean distclean install
